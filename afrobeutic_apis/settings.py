"""
Django settings for afrobeutic_apis project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import datetime
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ss)3_c^zw%c)mr6(*^(h%r0gym32l&7s6%lzof8d39rsb(*oyc'
FERNET_SECRET_KEY = os.getenv('FERNET_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['www.afrobeutic.com', '181.215.69.66','59.153.102.134', 'http://localhost:3000', 'http://localhost:8000','127.0.0.1']


# DEV ONLY â€” opens all origins
CORS_ALLOW_ALL_ORIGINS = True

# If you send cookies (session auth) across origins, also:
CORS_ALLOW_CREDENTIALS = True

# Allow common headers your app uses
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-language",
    "content-type",
    "origin",
    "authorization",
    "x-account-id",
    "x-csrftoken",
    "x-requested-with",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',                # DRF for APIs
    'accounts',                      # custom app
    "billing",                       # custom app
    "drf_spectacular",
    "drf_spectacular_sidecar",
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',    # Adds security headers (like HTTPS redirects, HSTS)
    'django.middleware.common.CommonMiddleware',        # Handles things like APPEND_SLASH and basic request/response processing
    'django.middleware.clickjacking.XFrameOptionsMiddleware',       # Protects from clickjacking in browser apps
    'accounts.middleware.AccountMembershipMiddleware',
]

ROOT_URLCONF = 'afrobeutic_apis.urls'

# settings.py
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],                  # your own template dirs if any
        "APP_DIRS": True,            # <-- REQUIRED so django loads templates from installed apps
        "OPTIONS": {
            # If you prefer custom loaders, include app_directories:
            # "loaders": [
            #   "django.template.loaders.filesystem.Loader",
            #   "django.template.loaders.app_directories.Loader",  # <-- this one is key
            # ],
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'afrobeutic_apis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME'),
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': os.getenv('DATABASE_HOST'),
        'PORT': os.getenv('DATABASE_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SPECTACULAR_SETTINGS = {
    "TITLE": "Afrobeutic APIs",
    "DESCRIPTION": "API documentation for Afrobeutic project",
    "VERSION": "0.1",

    # Define Bearer/JWT for the UI
    "SECURITY_SCHEMES": {
        "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT",
        }
    },
    # Apply Bearer to all endpoints by default
    "SECURITY": [{"bearerAuth": []}],

    # Keep auth in the Swagger UI across reloads
    "SWAGGER_UI_SETTINGS": {
        "persistAuthorization": True,
    },


    # Apply Bearer to all operations by default.
    # You can still override per-view with @extend_schema(security=[...]).
    "SECURITY": [{"bearerAuth": []}],
    "TAGS": [
        {"name": "Login", "description": "Account management endpoints"},
        {"name": "Users", "description": "User management endpoints"},
        {"name": "Admin", "description": "Administrative endpoints"},
    ],
    # The magic: inject x-tagGroups into the root of the schema
    "POSTPROCESSING_HOOKS": [
        "afrobeutic_apis.openapi_hooks.add_tag_groups",
    ],
}



# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # if BASE_DIR is defined as a Path

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

### JWT Settings
JWT_SECRET = os.getenv('JWT_SECRET')  # Use env var in production
JWT_ALGORITHM = 'HS256'
JWT_ACCESS_EXP = datetime.timedelta(days=1)
JWT_REFRESH_EXP = datetime.timedelta(days=7)

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "accounts.authentication.SimpleBearerAccessTokenAuthentication",
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'register': '3/hour',   # Allow only 3 registrations per hour per IP/user
        'login': '10/minute',   # Allow only 10 login attempts per minute
        'refresh_token': '20/minute',   # Allow only 20 refresh token per minute
    },
}

SITE_URL = os.getenv("SITE_URL", "https://www.afrobeutic.com")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", "payroll.dept@rd1.co.uk")
TOKEN_TTL_MINUTES = int(os.getenv("TOKEN_TTL_MINUTES", "10"))
